[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://resources/Floor-normal.png" type="Texture" id=1]
[ext_resource path="res://resources/Floor-Diffuse.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out2p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out2p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out3p0;
	NORMALMAP = n_out4p0;
	NORMALMAP_DEPTH = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -328.667, 251 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -220, 240 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 40, 160 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 15.392, 405.6 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 0, 0, 4, 0, 0, 8, 2, 0, 4, 0, 4, 1, 0, 9 )

[resource]
shader = SubResource( 4 )
